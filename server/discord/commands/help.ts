import { 
  Message, 
  MessageEmbed 
} from 'discord.js';
import { commands } from './index';
import { createTutorialEmbed } from '../utils/helpers';

// Help command
export const helpCommand = {
  name: 'help',
  description: 'TÃ¼m komutlarÄ± ve aÃ§Ä±klamalarÄ± gÃ¶ster',
  usage: '.help [komut adÄ±] veya .h help [komut adÄ±]',
  execute: async (message: Message, args: string[]) => {
    try {
      // If a specific command is requested
      if (args.length > 0) {
        const commandName = args[0].toLowerCase();
        const command = commands.get(commandName);
        
        if (!command) {
          return message.reply(`"${commandName}" isminde bir komut bulunamadÄ±.`);
        }
        
        const helpEmbed = createTutorialEmbed(
          `${command.name.toUpperCase()} Komutu YardÄ±mÄ±`,
          `**AÃ§Ä±klama:** ${command.description}\n\n` +
          `**KullanÄ±m:** ${command.usage}\n\n`
        );
        
        return message.reply({ embeds: [helpEmbed] });
      }
      
      // Otherwise, show all commands grouped by category
      const mainCommands = [
        { name: 'basÄ±n', category: 'Ana Komutlar' },
        { name: 'karar', category: 'Ana Komutlar' },
        { name: 'kadrodisi', category: 'Ana Komutlar' },
        { name: 'Ã¶zÃ¼r', category: 'Ana Komutlar' },
        { name: 'taktik', category: 'Ana Komutlar' },
        { name: 'takim', category: 'Ana Komutlar' },
        { name: 'takÄ±mÄ±m', category: 'Ana Komutlar' },
        { name: 'bÃ¼lten', category: 'Ana Komutlar' },
        { name: 'durum', category: 'Ana Komutlar' },
        { name: 'ekle', category: 'Ana Komutlar' }
      ];
      
      const mediaCommands = [
        { name: 'dedikodu', category: 'Medya KomutlarÄ±' },
        { name: 'sÄ±zdÄ±r', category: 'Medya KomutlarÄ±' }
      ];
      
      const minigameCommands = [
        { name: 'yalanmakinesi', category: 'Minigame KomutlarÄ±' },
        { name: 'hakem', category: 'Minigame KomutlarÄ±' },
        { name: 'taraftar', category: 'Minigame KomutlarÄ±' },
        { name: 'ÅŸampiyonluksozu', category: 'Minigame KomutlarÄ±' },
        { name: 'vs', category: 'Minigame KomutlarÄ±' }
      ];
      
      const helpEmbed = new MessageEmbed()
        .setColor('#5865F2')
        .setTitle('ğŸ“š Futbol RP Bot - Komut Listesi')
        .setDescription('Komutlar doÄŸrudan `.` Ã¶neki ile kullanÄ±labilir. Ã–rnek: `.durum`\n\n' +
                        'Alternatif olarak `.h` Ã¶neki de kullanÄ±labilir. Ã–rnek: `.h durum`\n\n' +
                        'Belirli bir komut hakkÄ±nda daha fazla bilgi almak iÃ§in `.help [komut]` veya `.h help [komut]` komutunu kullanabilirsin.')
        .setFooter({ text: 'Futbol RP Bot - Premier League 2025/26' });
      
      // Add command categories
      const addCommandsToEmbed = (commandList: { name: string, category: string }[], embed: MessageEmbed) => {
        const categoryName = commandList[0].category;
        const commandTexts: string[] = [];
        
        commandList.forEach(cmd => {
          const command = commands.get(cmd.name);
          if (command) {
            commandTexts.push(`**${command.name}** - ${command.description}`);
          }
        });
        
        embed.addField(`ğŸ”¹ ${categoryName}`, commandTexts.join('\n'));
      };
      
      // Add all command categories to the embed
      addCommandsToEmbed(mainCommands, helpEmbed);
      addCommandsToEmbed(mediaCommands, helpEmbed);
      addCommandsToEmbed(minigameCommands, helpEmbed);
      
      return message.reply({ embeds: [helpEmbed] });
      
    } catch (error) {
      console.error('Error in help command:', error);
      message.reply('YardÄ±m gÃ¶sterimi sÄ±rasÄ±nda bir hata oluÅŸtu.');
    }
  }
};